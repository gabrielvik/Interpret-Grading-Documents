@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Interpret_grading_documents.Models.RequirementCheckViewModel

<div class="container mt-5">
    <h2>Requirement Check for @Model.Document.FullName</h2>

    @if (Model.MeetsRequirement)
    {
        <p class="text-success"><strong>The student meets all requirements.</strong></p>
    }
    else
    {
        <p class="text-danger"><strong>The student does not meet all requirements.</strong></p>
    }

    <table class="table table-bordered mt-4">
        <thead>
            <tr>
                <th>Course Name</th>
                <th>Required Grade</th>
                <th>Student's Grade</th>
                <th>Meets Requirement</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var kvp in Model.RequirementResults)
            {
                var result = kvp.Value;
                <tr>
                    <td>@result.CourseName</td>
                    <td>@result.RequiredGrade</td>
                    <td>@result.StudentGrade</td>
                    <td>
                        @if (result.IsMet)
                        {
                            <span class="text-success">Yes</span>
                        }
                        else
                        {
                            <span class="text-danger">No</span>
                        }
                    </td>
                    <td>
                        @if (result.CourseName != kvp.Key)
                        {
                            <span>
                                The student has a grade of @result.StudentGrade on @result.CourseName, but has the following grades on other courses:
                                <ul>
                                    @if (result.OriginalCourseGrade != "N/A")
                                    {
                                        <li>@kvp.Key: @result.OriginalCourseGrade</li>
                                    }
                                    @foreach (var grade in result.OtherGradesInAlternatives)
                                    {

                                        @if (!grade.Contains(@result.CourseName))
                                        {
                                            <li>@grade</li>
                                        }
                                    }
                                </ul>
                            </span>
                        }
                        else
                        {
                            @if (result.OtherGradesInAlternatives != null && result.OtherGradesInAlternatives.Count > 0)
                            {
                                <span>The student also has the following grades on alternative courses:</span>
                                <ul>
                                    @foreach (var grade in result.OtherGradesInAlternatives)
                                    {
                                        <li>@grade</li>
                                    }
                                </ul>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-5">
        <div class="d-flex justify-content-center align-items-center flex-column">
            <h4 class="text-primary mb-3">Average Grade</h4>

            @{
                var averageGrade = Interpret_grading_documents.Services.RequirementChecker.CalculateAverageGrade(Model.Document, ViewBag.JsonFilePath);
            }

            <div class="p-4 bg-light border rounded" style="width: 200px; text-align: center;">
                <span style="font-size: 2.5rem; font-weight: bold; color: #28a745;">
                    @averageGrade
                </span>
            </div>

            <p class="mt-2 text-muted" style="font-size: 1rem;">
                This is the overall average based on the courses included.
            </p>
        </div>
    </div>

    <div class="text-center">
        <a asp-action="ViewDocument" asp-controller="Home" asp-route-id="@Model.Document.Id" class="btn btn-secondary">Back to Document</a>
    </div>
</div>
